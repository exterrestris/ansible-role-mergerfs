---

- name: Assert that OS family is supported
  ansible.builtin.assert:
    that: ansible_os_family | lower in ['debian', 'redhat']
    fail_msg: "Unsupported OS family: {{ ansible_os_family }}"

- name: Include OS-specific variables
  ansible.builtin.include_vars:
    file: "{{ ansible_os_family }}.yml"

- name: Install mergerfs prerequisites
  become: true
  ansible.builtin.package:
    name: "{{ mergerfs_prerequisites }}"
    state: present
  when: mergerfs_install_prerequisites

- name: Install mergerfs
  ansible.builtin.include_tasks:
    file: install.yml

- name: Mount mergerfs filesystems
  ansible.posix.mount:
    fstype: fuse.mergerfs
    src: "{{ ':'.join(item.branches | mandatory) }}"
    path: "{{ item.path | mandatory }}"
    opts: "{{ item.options | default('defaults') }}"
    state: "{{ item.state | default('mounted') }}"
  loop: "{{ mergerfs_mounts }}"
  become: true

- name: Unmount unlisted mergerfs filesystems
  when: mergerfs_remove_undefined_mounts
  block:
    - name: List existing mergerfs filesystems
      # ansible_mounts doesn't list fuse mounts
      ansible.builtin.command: "findmnt -t fuse.mergerfs -o TARGET -n"
      changed_when: false
      register: existing_mergerfs_mounts

    - name: Unmount mergerfs filesystems
      ansible.posix.mount:
        path: "{{ item }}"
        state: absent
      loop: "{{ existing_mergerfs_mounts.stdout_lines }}"
      when: item not in mergerfs_mounts | map(attribute='path') | list
